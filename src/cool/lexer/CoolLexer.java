// Generated from C:/Andrei/CPL/Tema 2/Parser-skel/src/cool/lexer/CoolLexer.g4 by ANTLR 4.13.1

    package cool.lexer;	

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class CoolLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ERROR=1, CLASS=2, INHERITS=3, TRUE=4, FALSE=5, NOT=6, ISVOID=7, NEW=8, 
		IF=9, THEN=10, ELSE=11, FI=12, WHILE=13, LOOP=14, POOL=15, LET=16, IN=17, 
		CASE=18, ESAC=19, OF=20, TYPE=21, ID=22, INTEGER=23, UNTERMINATED_STRING=24, 
		EOF_IN_STRING=25, STRING=26, ASSIGNMENT=27, CASE_RESULT=28, DISPATCH=29, 
		PLUS=30, MINUS=31, MUL=32, DIV=33, TILDE=34, LESS=35, LE=36, EQUAL=37, 
		WS=38, DOT=39, COMMA=40, SEMICOLON=41, COLON=42, OPEN_BRACKETS=43, CLOSED_BRACKETS=44, 
		OPEN_PARANTHESIS=45, CLOSED_PARANTHESIS=46, SINGLE_LINE_COMMENT=47, BLOCK_COMMENT=48, 
		CLOSED_COMMENT=49, UNTERMINATED_COMMENT=50, UNKNOWN_CHARACTER=51;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"CLASS", "INHERITS", "TRUE", "FALSE", "NOT", "ISVOID", "NEW", "IF", "THEN", 
			"ELSE", "FI", "WHILE", "LOOP", "POOL", "LET", "IN", "CASE", "ESAC", "OF", 
			"DIGIT", "NON_ZERO_DIGIT", "LOWERCASE_LETTER", "UPPERCASE_LETTER", "LETTER", 
			"TYPE", "ID", "INTEGER", "END_LINE", "UNTERMINATED_STRING", "EOF_IN_STRING", 
			"STRING", "ASSIGNMENT", "CASE_RESULT", "DISPATCH", "PLUS", "MINUS", "MUL", 
			"DIV", "TILDE", "LESS", "LE", "EQUAL", "WS", "DOT", "COMMA", "SEMICOLON", 
			"COLON", "OPEN_BRACKETS", "CLOSED_BRACKETS", "OPEN_PARANTHESIS", "CLOSED_PARANTHESIS", 
			"SINGLE_LINE_COMMENT", "NON_COMMENT", "COMMENT", "BLOCK_COMMENT", "CLOSED_COMMENT", 
			"UNTERMINATED_COMMENT", "UNKNOWN_CHARACTER"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'class'", "'inherits'", "'true'", "'false'", "'not'", "'isvoid'", 
			"'new'", "'if'", "'then'", "'else'", "'fi'", "'while'", "'loop'", "'pool'", 
			"'let'", "'in'", "'case'", "'esac'", "'of'", null, null, null, null, 
			null, null, "'<-'", "'=>'", "'@'", "'+'", "'-'", "'*'", "'/'", "'~'", 
			"'<'", "'<='", "'='", null, "'.'", "','", "';'", "':'", "'{'", "'}'", 
			"'('", "')'", null, null, "'*)'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "ERROR", "CLASS", "INHERITS", "TRUE", "FALSE", "NOT", "ISVOID", 
			"NEW", "IF", "THEN", "ELSE", "FI", "WHILE", "LOOP", "POOL", "LET", "IN", 
			"CASE", "ESAC", "OF", "TYPE", "ID", "INTEGER", "UNTERMINATED_STRING", 
			"EOF_IN_STRING", "STRING", "ASSIGNMENT", "CASE_RESULT", "DISPATCH", "PLUS", 
			"MINUS", "MUL", "DIV", "TILDE", "LESS", "LE", "EQUAL", "WS", "DOT", "COMMA", 
			"SEMICOLON", "COLON", "OPEN_BRACKETS", "CLOSED_BRACKETS", "OPEN_PARANTHESIS", 
			"CLOSED_PARANTHESIS", "SINGLE_LINE_COMMENT", "BLOCK_COMMENT", "CLOSED_COMMENT", 
			"UNTERMINATED_COMMENT", "UNKNOWN_CHARACTER"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}

	    
	    private void raiseError(String msg) {
	        setText(msg);
	        setType(ERROR);
	    }


	public CoolLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CoolLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 28:
			UNTERMINATED_STRING_action((RuleContext)_localctx, actionIndex);
			break;
		case 29:
			EOF_IN_STRING_action((RuleContext)_localctx, actionIndex);
			break;
		case 30:
			STRING_action((RuleContext)_localctx, actionIndex);
			break;
		case 55:
			CLOSED_COMMENT_action((RuleContext)_localctx, actionIndex);
			break;
		case 56:
			UNTERMINATED_COMMENT_action((RuleContext)_localctx, actionIndex);
			break;
		case 57:
			UNKNOWN_CHARACTER_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void UNTERMINATED_STRING_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:
			 raiseError("Unterminated string constant"); 
			break;
		}
	}
	private void EOF_IN_STRING_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1:
			 raiseError("EOF in string constant"); 
			break;
		}
	}
	private void STRING_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2:

			    String originalString = getText();
			    StringBuilder newString = new StringBuilder();
			    boolean isEscaped = false;
			    boolean containsNull = false;

			    for (int i = 1; i < originalString.length() - 1; i++) {

			        // If the String contains the null character, then it is an error.
			        if (originalString.charAt(i) == '\u0000') {
			            containsNull = true;
			            raiseError("String contains null character");
			            break;
			        }

			        if (!isEscaped) {
			            if (originalString.charAt(i) == '\\')
			                isEscaped = true;
			            else
			                newString.append(originalString.charAt(i));
			        } else {
			            if (originalString.charAt(i) == 'n')
			                newString.append('\n');
			            else if (originalString.charAt(i) == 'b')
			                newString.append('\b');
			            else if (originalString.charAt(i) == 't')
			                newString.append('\t');
			            else if (originalString.charAt(i) == 'f')
			                newString.append('\f');
			            else
			                newString.append(originalString.charAt(i));
			        }
			    }

			    // If the String is too long, then we return an error.
			    if (!containsNull) {
			        if (newString.length() > 1024) {
			            raiseError("String constant too long");
			        } else {
			            setText(newString.toString());
			        }
			    }

			break;
		}
	}
	private void CLOSED_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3:
			 raiseError("Unmatched *)"); 
			break;
		}
	}
	private void UNTERMINATED_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 4:
			 raiseError("EOF in comment"); 
			break;
		}
	}
	private void UNKNOWN_CHARACTER_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 5:

			    String unk = getText();
			    raiseError("Invalid character: " + unk);

			break;
		}
	}

	public static final String _serializedATN =
		"\u0004\u00003\u01c0\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u00020\u0007"+
		"0\u00021\u00071\u00022\u00072\u00023\u00073\u00024\u00074\u00025\u0007"+
		"5\u00026\u00076\u00027\u00077\u00028\u00078\u00029\u00079\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011"+
		"\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012"+
		"\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015"+
		"\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0003\u0017\u00dd\b\u0017"+
		"\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0005\u0018"+
		"\u00e4\b\u0018\n\u0018\f\u0018\u00e7\t\u0018\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0005\u0019\u00ee\b\u0019\n\u0019\f\u0019"+
		"\u00f1\t\u0019\u0001\u001a\u0001\u001a\u0001\u001a\u0004\u001a\u00f6\b"+
		"\u001a\u000b\u001a\f\u001a\u00f7\u0003\u001a\u00fa\b\u001a\u0001\u001b"+
		"\u0001\u001b\u0001\u001b\u0003\u001b\u00ff\b\u001b\u0001\u001c\u0001\u001c"+
		"\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c"+
		"\u0001\u001c\u0005\u001c\u010a\b\u001c\n\u001c\f\u001c\u010d\t\u001c\u0001"+
		"\u001c\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001"+
		"\u001d\u0005\u001d\u0116\b\u001d\n\u001d\f\u001d\u0119\t\u001d\u0001\u001d"+
		"\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e"+
		"\u0001\u001e\u0001\u001e\u0005\u001e\u0124\b\u001e\n\u001e\f\u001e\u0127"+
		"\t\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0001"+
		"\u001f\u0001 \u0001 \u0001 \u0001!\u0001!\u0001\"\u0001\"\u0001#\u0001"+
		"#\u0001$\u0001$\u0001%\u0001%\u0001&\u0001&\u0001\'\u0001\'\u0001(\u0001"+
		"(\u0001(\u0001)\u0001)\u0001*\u0004*\u0146\b*\u000b*\f*\u0147\u0001*\u0001"+
		"*\u0001+\u0001+\u0001,\u0001,\u0001-\u0001-\u0001.\u0001.\u0001/\u0001"+
		"/\u00010\u00010\u00011\u00011\u00012\u00012\u00013\u00013\u00013\u0001"+
		"3\u00053\u0160\b3\n3\f3\u0163\t3\u00013\u00033\u0166\b3\u00013\u00013"+
		"\u00014\u00014\u00014\u00014\u00014\u00034\u016f\b4\u00015\u00015\u0001"+
		"5\u00015\u00055\u0175\b5\n5\f5\u0178\t5\u00015\u00015\u00015\u00016\u0001"+
		"6\u00016\u00016\u00016\u00056\u0182\b6\n6\f6\u0185\t6\u00016\u00016\u0005"+
		"6\u0189\b6\n6\f6\u018c\t6\u00016\u00056\u018f\b6\n6\f6\u0192\t6\u0001"+
		"6\u00056\u0195\b6\n6\f6\u0198\t6\u00016\u00016\u00016\u00036\u019d\b6"+
		"\u00016\u00016\u00017\u00017\u00017\u00017\u00017\u00018\u00018\u0001"+
		"8\u00018\u00058\u01aa\b8\n8\f8\u01ad\t8\u00018\u00058\u01b0\b8\n8\f8\u01b3"+
		"\t8\u00018\u00058\u01b6\b8\n8\f8\u01b9\t8\u00018\u00018\u00018\u00019"+
		"\u00019\u00019\n\u010b\u0117\u0125\u0161\u0176\u0183\u018a\u0196\u01ab"+
		"\u01b7\u0000:\u0001\u0002\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006"+
		"\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e"+
		"\u001b\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014\'\u0000)\u0000"+
		"+\u0000-\u0000/\u00001\u00153\u00165\u00177\u00009\u0018;\u0019=\u001a"+
		"?\u001bA\u001cC\u001dE\u001eG\u001fI K!M\"O#Q$S%U&W\'Y([)]*_+a,c-e.g/"+
		"i\u0000k\u0000m0o1q2s3\u0001\u0000\u000b\u0001\u000009\u0001\u000019\u0001"+
		"\u0000az\u0001\u0000AZ\u0003\u0000\n\n\r\r\"\"\u0002\u0000\n\n\"\"\u0003"+
		"\u0000\t\n\f\r  \u0001\u0001\n\n\u0001\u0000**\u0001\u0000))\u0001\u0000"+
		"(*\u01d9\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000"+
		"\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000"+
		"\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000"+
		"\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000"+
		"\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000"+
		"\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000"+
		"\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000"+
		"\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000"+
		"!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001"+
		"\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000"+
		"\u0000\u00005\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000"+
		";\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001"+
		"\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000"+
		"\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000"+
		"I\u0001\u0000\u0000\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001"+
		"\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000"+
		"\u0000\u0000S\u0001\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\u0000\u0000"+
		"W\u0001\u0000\u0000\u0000\u0000Y\u0001\u0000\u0000\u0000\u0000[\u0001"+
		"\u0000\u0000\u0000\u0000]\u0001\u0000\u0000\u0000\u0000_\u0001\u0000\u0000"+
		"\u0000\u0000a\u0001\u0000\u0000\u0000\u0000c\u0001\u0000\u0000\u0000\u0000"+
		"e\u0001\u0000\u0000\u0000\u0000g\u0001\u0000\u0000\u0000\u0000m\u0001"+
		"\u0000\u0000\u0000\u0000o\u0001\u0000\u0000\u0000\u0000q\u0001\u0000\u0000"+
		"\u0000\u0000s\u0001\u0000\u0000\u0000\u0001u\u0001\u0000\u0000\u0000\u0003"+
		"{\u0001\u0000\u0000\u0000\u0005\u0084\u0001\u0000\u0000\u0000\u0007\u0089"+
		"\u0001\u0000\u0000\u0000\t\u008f\u0001\u0000\u0000\u0000\u000b\u0093\u0001"+
		"\u0000\u0000\u0000\r\u009a\u0001\u0000\u0000\u0000\u000f\u009e\u0001\u0000"+
		"\u0000\u0000\u0011\u00a1\u0001\u0000\u0000\u0000\u0013\u00a6\u0001\u0000"+
		"\u0000\u0000\u0015\u00ab\u0001\u0000\u0000\u0000\u0017\u00ae\u0001\u0000"+
		"\u0000\u0000\u0019\u00b4\u0001\u0000\u0000\u0000\u001b\u00b9\u0001\u0000"+
		"\u0000\u0000\u001d\u00be\u0001\u0000\u0000\u0000\u001f\u00c2\u0001\u0000"+
		"\u0000\u0000!\u00c5\u0001\u0000\u0000\u0000#\u00ca\u0001\u0000\u0000\u0000"+
		"%\u00cf\u0001\u0000\u0000\u0000\'\u00d2\u0001\u0000\u0000\u0000)\u00d4"+
		"\u0001\u0000\u0000\u0000+\u00d6\u0001\u0000\u0000\u0000-\u00d8\u0001\u0000"+
		"\u0000\u0000/\u00dc\u0001\u0000\u0000\u00001\u00de\u0001\u0000\u0000\u0000"+
		"3\u00e8\u0001\u0000\u0000\u00005\u00f9\u0001\u0000\u0000\u00007\u00fe"+
		"\u0001\u0000\u0000\u00009\u0100\u0001\u0000\u0000\u0000;\u0111\u0001\u0000"+
		"\u0000\u0000=\u011d\u0001\u0000\u0000\u0000?\u012b\u0001\u0000\u0000\u0000"+
		"A\u012e\u0001\u0000\u0000\u0000C\u0131\u0001\u0000\u0000\u0000E\u0133"+
		"\u0001\u0000\u0000\u0000G\u0135\u0001\u0000\u0000\u0000I\u0137\u0001\u0000"+
		"\u0000\u0000K\u0139\u0001\u0000\u0000\u0000M\u013b\u0001\u0000\u0000\u0000"+
		"O\u013d\u0001\u0000\u0000\u0000Q\u013f\u0001\u0000\u0000\u0000S\u0142"+
		"\u0001\u0000\u0000\u0000U\u0145\u0001\u0000\u0000\u0000W\u014b\u0001\u0000"+
		"\u0000\u0000Y\u014d\u0001\u0000\u0000\u0000[\u014f\u0001\u0000\u0000\u0000"+
		"]\u0151\u0001\u0000\u0000\u0000_\u0153\u0001\u0000\u0000\u0000a\u0155"+
		"\u0001\u0000\u0000\u0000c\u0157\u0001\u0000\u0000\u0000e\u0159\u0001\u0000"+
		"\u0000\u0000g\u015b\u0001\u0000\u0000\u0000i\u016e\u0001\u0000\u0000\u0000"+
		"k\u0170\u0001\u0000\u0000\u0000m\u019c\u0001\u0000\u0000\u0000o\u01a0"+
		"\u0001\u0000\u0000\u0000q\u01a5\u0001\u0000\u0000\u0000s\u01bd\u0001\u0000"+
		"\u0000\u0000uv\u0005c\u0000\u0000vw\u0005l\u0000\u0000wx\u0005a\u0000"+
		"\u0000xy\u0005s\u0000\u0000yz\u0005s\u0000\u0000z\u0002\u0001\u0000\u0000"+
		"\u0000{|\u0005i\u0000\u0000|}\u0005n\u0000\u0000}~\u0005h\u0000\u0000"+
		"~\u007f\u0005e\u0000\u0000\u007f\u0080\u0005r\u0000\u0000\u0080\u0081"+
		"\u0005i\u0000\u0000\u0081\u0082\u0005t\u0000\u0000\u0082\u0083\u0005s"+
		"\u0000\u0000\u0083\u0004\u0001\u0000\u0000\u0000\u0084\u0085\u0005t\u0000"+
		"\u0000\u0085\u0086\u0005r\u0000\u0000\u0086\u0087\u0005u\u0000\u0000\u0087"+
		"\u0088\u0005e\u0000\u0000\u0088\u0006\u0001\u0000\u0000\u0000\u0089\u008a"+
		"\u0005f\u0000\u0000\u008a\u008b\u0005a\u0000\u0000\u008b\u008c\u0005l"+
		"\u0000\u0000\u008c\u008d\u0005s\u0000\u0000\u008d\u008e\u0005e\u0000\u0000"+
		"\u008e\b\u0001\u0000\u0000\u0000\u008f\u0090\u0005n\u0000\u0000\u0090"+
		"\u0091\u0005o\u0000\u0000\u0091\u0092\u0005t\u0000\u0000\u0092\n\u0001"+
		"\u0000\u0000\u0000\u0093\u0094\u0005i\u0000\u0000\u0094\u0095\u0005s\u0000"+
		"\u0000\u0095\u0096\u0005v\u0000\u0000\u0096\u0097\u0005o\u0000\u0000\u0097"+
		"\u0098\u0005i\u0000\u0000\u0098\u0099\u0005d\u0000\u0000\u0099\f\u0001"+
		"\u0000\u0000\u0000\u009a\u009b\u0005n\u0000\u0000\u009b\u009c\u0005e\u0000"+
		"\u0000\u009c\u009d\u0005w\u0000\u0000\u009d\u000e\u0001\u0000\u0000\u0000"+
		"\u009e\u009f\u0005i\u0000\u0000\u009f\u00a0\u0005f\u0000\u0000\u00a0\u0010"+
		"\u0001\u0000\u0000\u0000\u00a1\u00a2\u0005t\u0000\u0000\u00a2\u00a3\u0005"+
		"h\u0000\u0000\u00a3\u00a4\u0005e\u0000\u0000\u00a4\u00a5\u0005n\u0000"+
		"\u0000\u00a5\u0012\u0001\u0000\u0000\u0000\u00a6\u00a7\u0005e\u0000\u0000"+
		"\u00a7\u00a8\u0005l\u0000\u0000\u00a8\u00a9\u0005s\u0000\u0000\u00a9\u00aa"+
		"\u0005e\u0000\u0000\u00aa\u0014\u0001\u0000\u0000\u0000\u00ab\u00ac\u0005"+
		"f\u0000\u0000\u00ac\u00ad\u0005i\u0000\u0000\u00ad\u0016\u0001\u0000\u0000"+
		"\u0000\u00ae\u00af\u0005w\u0000\u0000\u00af\u00b0\u0005h\u0000\u0000\u00b0"+
		"\u00b1\u0005i\u0000\u0000\u00b1\u00b2\u0005l\u0000\u0000\u00b2\u00b3\u0005"+
		"e\u0000\u0000\u00b3\u0018\u0001\u0000\u0000\u0000\u00b4\u00b5\u0005l\u0000"+
		"\u0000\u00b5\u00b6\u0005o\u0000\u0000\u00b6\u00b7\u0005o\u0000\u0000\u00b7"+
		"\u00b8\u0005p\u0000\u0000\u00b8\u001a\u0001\u0000\u0000\u0000\u00b9\u00ba"+
		"\u0005p\u0000\u0000\u00ba\u00bb\u0005o\u0000\u0000\u00bb\u00bc\u0005o"+
		"\u0000\u0000\u00bc\u00bd\u0005l\u0000\u0000\u00bd\u001c\u0001\u0000\u0000"+
		"\u0000\u00be\u00bf\u0005l\u0000\u0000\u00bf\u00c0\u0005e\u0000\u0000\u00c0"+
		"\u00c1\u0005t\u0000\u0000\u00c1\u001e\u0001\u0000\u0000\u0000\u00c2\u00c3"+
		"\u0005i\u0000\u0000\u00c3\u00c4\u0005n\u0000\u0000\u00c4 \u0001\u0000"+
		"\u0000\u0000\u00c5\u00c6\u0005c\u0000\u0000\u00c6\u00c7\u0005a\u0000\u0000"+
		"\u00c7\u00c8\u0005s\u0000\u0000\u00c8\u00c9\u0005e\u0000\u0000\u00c9\""+
		"\u0001\u0000\u0000\u0000\u00ca\u00cb\u0005e\u0000\u0000\u00cb\u00cc\u0005"+
		"s\u0000\u0000\u00cc\u00cd\u0005a\u0000\u0000\u00cd\u00ce\u0005c\u0000"+
		"\u0000\u00ce$\u0001\u0000\u0000\u0000\u00cf\u00d0\u0005o\u0000\u0000\u00d0"+
		"\u00d1\u0005f\u0000\u0000\u00d1&\u0001\u0000\u0000\u0000\u00d2\u00d3\u0007"+
		"\u0000\u0000\u0000\u00d3(\u0001\u0000\u0000\u0000\u00d4\u00d5\u0007\u0001"+
		"\u0000\u0000\u00d5*\u0001\u0000\u0000\u0000\u00d6\u00d7\u0007\u0002\u0000"+
		"\u0000\u00d7,\u0001\u0000\u0000\u0000\u00d8\u00d9\u0007\u0003\u0000\u0000"+
		"\u00d9.\u0001\u0000\u0000\u0000\u00da\u00dd\u0003+\u0015\u0000\u00db\u00dd"+
		"\u0003-\u0016\u0000\u00dc\u00da\u0001\u0000\u0000\u0000\u00dc\u00db\u0001"+
		"\u0000\u0000\u0000\u00dd0\u0001\u0000\u0000\u0000\u00de\u00e5\u0003-\u0016"+
		"\u0000\u00df\u00e4\u0003+\u0015\u0000\u00e0\u00e4\u0003-\u0016\u0000\u00e1"+
		"\u00e4\u0003\'\u0013\u0000\u00e2\u00e4\u0005_\u0000\u0000\u00e3\u00df"+
		"\u0001\u0000\u0000\u0000\u00e3\u00e0\u0001\u0000\u0000\u0000\u00e3\u00e1"+
		"\u0001\u0000\u0000\u0000\u00e3\u00e2\u0001\u0000\u0000\u0000\u00e4\u00e7"+
		"\u0001\u0000\u0000\u0000\u00e5\u00e3\u0001\u0000\u0000\u0000\u00e5\u00e6"+
		"\u0001\u0000\u0000\u0000\u00e62\u0001\u0000\u0000\u0000\u00e7\u00e5\u0001"+
		"\u0000\u0000\u0000\u00e8\u00ef\u0003+\u0015\u0000\u00e9\u00ee\u0003+\u0015"+
		"\u0000\u00ea\u00ee\u0003-\u0016\u0000\u00eb\u00ee\u0003\'\u0013\u0000"+
		"\u00ec\u00ee\u0005_\u0000\u0000\u00ed\u00e9\u0001\u0000\u0000\u0000\u00ed"+
		"\u00ea\u0001\u0000\u0000\u0000\u00ed\u00eb\u0001\u0000\u0000\u0000\u00ed"+
		"\u00ec\u0001\u0000\u0000\u0000\u00ee\u00f1\u0001\u0000\u0000\u0000\u00ef"+
		"\u00ed\u0001\u0000\u0000\u0000\u00ef\u00f0\u0001\u0000\u0000\u0000\u00f0"+
		"4\u0001\u0000\u0000\u0000\u00f1\u00ef\u0001\u0000\u0000\u0000\u00f2\u00fa"+
		"\u0003\'\u0013\u0000\u00f3\u00f5\u0003)\u0014\u0000\u00f4\u00f6\u0003"+
		"\'\u0013\u0000\u00f5\u00f4\u0001\u0000\u0000\u0000\u00f6\u00f7\u0001\u0000"+
		"\u0000\u0000\u00f7\u00f5\u0001\u0000\u0000\u0000\u00f7\u00f8\u0001\u0000"+
		"\u0000\u0000\u00f8\u00fa\u0001\u0000\u0000\u0000\u00f9\u00f2\u0001\u0000"+
		"\u0000\u0000\u00f9\u00f3\u0001\u0000\u0000\u0000\u00fa6\u0001\u0000\u0000"+
		"\u0000\u00fb\u00fc\u0005\r\u0000\u0000\u00fc\u00ff\u0005\n\u0000\u0000"+
		"\u00fd\u00ff\u0005\n\u0000\u0000\u00fe\u00fb\u0001\u0000\u0000\u0000\u00fe"+
		"\u00fd\u0001\u0000\u0000\u0000\u00ff8\u0001\u0000\u0000\u0000\u0100\u010b"+
		"\u0005\"\u0000\u0000\u0101\u0102\u0005\\\u0000\u0000\u0102\u010a\u0005"+
		"\"\u0000\u0000\u0103\u0104\u0005\\\u0000\u0000\u0104\u0105\u0005\r\u0000"+
		"\u0000\u0105\u010a\u0005\n\u0000\u0000\u0106\u0107\u0005\\\u0000\u0000"+
		"\u0107\u010a\u0005\n\u0000\u0000\u0108\u010a\b\u0004\u0000\u0000\u0109"+
		"\u0101\u0001\u0000\u0000\u0000\u0109\u0103\u0001\u0000\u0000\u0000\u0109"+
		"\u0106\u0001\u0000\u0000\u0000\u0109\u0108\u0001\u0000\u0000\u0000\u010a"+
		"\u010d\u0001\u0000\u0000\u0000\u010b\u010c\u0001\u0000\u0000\u0000\u010b"+
		"\u0109\u0001\u0000\u0000\u0000\u010c\u010e\u0001\u0000\u0000\u0000\u010d"+
		"\u010b\u0001\u0000\u0000\u0000\u010e\u010f\u00037\u001b\u0000\u010f\u0110"+
		"\u0006\u001c\u0000\u0000\u0110:\u0001\u0000\u0000\u0000\u0111\u0117\u0005"+
		"\"\u0000\u0000\u0112\u0113\u0005\\\u0000\u0000\u0113\u0116\u0005\"\u0000"+
		"\u0000\u0114\u0116\b\u0005\u0000\u0000\u0115\u0112\u0001\u0000\u0000\u0000"+
		"\u0115\u0114\u0001\u0000\u0000\u0000\u0116\u0119\u0001\u0000\u0000\u0000"+
		"\u0117\u0118\u0001\u0000\u0000\u0000\u0117\u0115\u0001\u0000\u0000\u0000"+
		"\u0118\u011a\u0001\u0000\u0000\u0000\u0119\u0117\u0001\u0000\u0000\u0000"+
		"\u011a\u011b\u0005\u0000\u0000\u0001\u011b\u011c\u0006\u001d\u0001\u0000"+
		"\u011c<\u0001\u0000\u0000\u0000\u011d\u0125\u0005\"\u0000\u0000\u011e"+
		"\u011f\u0005\\\u0000\u0000\u011f\u0124\u0005\"\u0000\u0000\u0120\u0121"+
		"\u0005\\\u0000\u0000\u0121\u0124\u00037\u001b\u0000\u0122\u0124\b\u0004"+
		"\u0000\u0000\u0123\u011e\u0001\u0000\u0000\u0000\u0123\u0120\u0001\u0000"+
		"\u0000\u0000\u0123\u0122\u0001\u0000\u0000\u0000\u0124\u0127\u0001\u0000"+
		"\u0000\u0000\u0125\u0126\u0001\u0000\u0000\u0000\u0125\u0123\u0001\u0000"+
		"\u0000\u0000\u0126\u0128\u0001\u0000\u0000\u0000\u0127\u0125\u0001\u0000"+
		"\u0000\u0000\u0128\u0129\u0005\"\u0000\u0000\u0129\u012a\u0006\u001e\u0002"+
		"\u0000\u012a>\u0001\u0000\u0000\u0000\u012b\u012c\u0005<\u0000\u0000\u012c"+
		"\u012d\u0005-\u0000\u0000\u012d@\u0001\u0000\u0000\u0000\u012e\u012f\u0005"+
		"=\u0000\u0000\u012f\u0130\u0005>\u0000\u0000\u0130B\u0001\u0000\u0000"+
		"\u0000\u0131\u0132\u0005@\u0000\u0000\u0132D\u0001\u0000\u0000\u0000\u0133"+
		"\u0134\u0005+\u0000\u0000\u0134F\u0001\u0000\u0000\u0000\u0135\u0136\u0005"+
		"-\u0000\u0000\u0136H\u0001\u0000\u0000\u0000\u0137\u0138\u0005*\u0000"+
		"\u0000\u0138J\u0001\u0000\u0000\u0000\u0139\u013a\u0005/\u0000\u0000\u013a"+
		"L\u0001\u0000\u0000\u0000\u013b\u013c\u0005~\u0000\u0000\u013cN\u0001"+
		"\u0000\u0000\u0000\u013d\u013e\u0005<\u0000\u0000\u013eP\u0001\u0000\u0000"+
		"\u0000\u013f\u0140\u0005<\u0000\u0000\u0140\u0141\u0005=\u0000\u0000\u0141"+
		"R\u0001\u0000\u0000\u0000\u0142\u0143\u0005=\u0000\u0000\u0143T\u0001"+
		"\u0000\u0000\u0000\u0144\u0146\u0007\u0006\u0000\u0000\u0145\u0144\u0001"+
		"\u0000\u0000\u0000\u0146\u0147\u0001\u0000\u0000\u0000\u0147\u0145\u0001"+
		"\u0000\u0000\u0000\u0147\u0148\u0001\u0000\u0000\u0000\u0148\u0149\u0001"+
		"\u0000\u0000\u0000\u0149\u014a\u0006*\u0003\u0000\u014aV\u0001\u0000\u0000"+
		"\u0000\u014b\u014c\u0005.\u0000\u0000\u014cX\u0001\u0000\u0000\u0000\u014d"+
		"\u014e\u0005,\u0000\u0000\u014eZ\u0001\u0000\u0000\u0000\u014f\u0150\u0005"+
		";\u0000\u0000\u0150\\\u0001\u0000\u0000\u0000\u0151\u0152\u0005:\u0000"+
		"\u0000\u0152^\u0001\u0000\u0000\u0000\u0153\u0154\u0005{\u0000\u0000\u0154"+
		"`\u0001\u0000\u0000\u0000\u0155\u0156\u0005}\u0000\u0000\u0156b\u0001"+
		"\u0000\u0000\u0000\u0157\u0158\u0005(\u0000\u0000\u0158d\u0001\u0000\u0000"+
		"\u0000\u0159\u015a\u0005)\u0000\u0000\u015af\u0001\u0000\u0000\u0000\u015b"+
		"\u015c\u0005-\u0000\u0000\u015c\u015d\u0005-\u0000\u0000\u015d\u0161\u0001"+
		"\u0000\u0000\u0000\u015e\u0160\t\u0000\u0000\u0000\u015f\u015e\u0001\u0000"+
		"\u0000\u0000\u0160\u0163\u0001\u0000\u0000\u0000\u0161\u0162\u0001\u0000"+
		"\u0000\u0000\u0161\u015f\u0001\u0000\u0000\u0000\u0162\u0165\u0001\u0000"+
		"\u0000\u0000\u0163\u0161\u0001\u0000\u0000\u0000\u0164\u0166\u0007\u0007"+
		"\u0000\u0000\u0165\u0164\u0001\u0000\u0000\u0000\u0166\u0167\u0001\u0000"+
		"\u0000\u0000\u0167\u0168\u00063\u0003\u0000\u0168h\u0001\u0000\u0000\u0000"+
		"\u0169\u016a\u0005(\u0000\u0000\u016a\u016f\b\b\u0000\u0000\u016b\u016c"+
		"\u0005*\u0000\u0000\u016c\u016f\b\t\u0000\u0000\u016d\u016f\b\n\u0000"+
		"\u0000\u016e\u0169\u0001\u0000\u0000\u0000\u016e\u016b\u0001\u0000\u0000"+
		"\u0000\u016e\u016d\u0001\u0000\u0000\u0000\u016fj\u0001\u0000\u0000\u0000"+
		"\u0170\u0171\u0005(\u0000\u0000\u0171\u0172\u0005*\u0000\u0000\u0172\u0176"+
		"\u0001\u0000\u0000\u0000\u0173\u0175\u0003i4\u0000\u0174\u0173\u0001\u0000"+
		"\u0000\u0000\u0175\u0178\u0001\u0000\u0000\u0000\u0176\u0177\u0001\u0000"+
		"\u0000\u0000\u0176\u0174\u0001\u0000\u0000\u0000\u0177\u0179\u0001\u0000"+
		"\u0000\u0000\u0178\u0176\u0001\u0000\u0000\u0000\u0179\u017a\u0005*\u0000"+
		"\u0000\u017a\u017b\u0005)\u0000\u0000\u017bl\u0001\u0000\u0000\u0000\u017c"+
		"\u019d\u0003k5\u0000\u017d\u017e\u0005(\u0000\u0000\u017e\u017f\u0005"+
		"*\u0000\u0000\u017f\u0183\u0001\u0000\u0000\u0000\u0180\u0182\u0003i4"+
		"\u0000\u0181\u0180\u0001\u0000\u0000\u0000\u0182\u0185\u0001\u0000\u0000"+
		"\u0000\u0183\u0184\u0001\u0000\u0000\u0000\u0183\u0181\u0001\u0000\u0000"+
		"\u0000\u0184\u0186\u0001\u0000\u0000\u0000\u0185\u0183\u0001\u0000\u0000"+
		"\u0000\u0186\u0190\u0003m6\u0000\u0187\u0189\u0003i4\u0000\u0188\u0187"+
		"\u0001\u0000\u0000\u0000\u0189\u018c\u0001\u0000\u0000\u0000\u018a\u018b"+
		"\u0001\u0000\u0000\u0000\u018a\u0188\u0001\u0000\u0000\u0000\u018b\u018d"+
		"\u0001\u0000\u0000\u0000\u018c\u018a\u0001\u0000\u0000\u0000\u018d\u018f"+
		"\u0003m6\u0000\u018e\u018a\u0001\u0000\u0000\u0000\u018f\u0192\u0001\u0000"+
		"\u0000\u0000\u0190\u018e\u0001\u0000\u0000\u0000\u0190\u0191\u0001\u0000"+
		"\u0000\u0000\u0191\u0196\u0001\u0000\u0000\u0000\u0192\u0190\u0001\u0000"+
		"\u0000\u0000\u0193\u0195\u0003i4\u0000\u0194\u0193\u0001\u0000\u0000\u0000"+
		"\u0195\u0198\u0001\u0000\u0000\u0000\u0196\u0197\u0001\u0000\u0000\u0000"+
		"\u0196\u0194\u0001\u0000\u0000\u0000\u0197\u0199\u0001\u0000\u0000\u0000"+
		"\u0198\u0196\u0001\u0000\u0000\u0000\u0199\u019a\u0005*\u0000\u0000\u019a"+
		"\u019b\u0005)\u0000\u0000\u019b\u019d\u0001\u0000\u0000\u0000\u019c\u017c"+
		"\u0001\u0000\u0000\u0000\u019c\u017d\u0001\u0000\u0000\u0000\u019d\u019e"+
		"\u0001\u0000\u0000\u0000\u019e\u019f\u00066\u0003\u0000\u019fn\u0001\u0000"+
		"\u0000\u0000\u01a0\u01a1\u0005*\u0000\u0000\u01a1\u01a2\u0005)\u0000\u0000"+
		"\u01a2\u01a3\u0001\u0000\u0000\u0000\u01a3\u01a4\u00067\u0004\u0000\u01a4"+
		"p\u0001\u0000\u0000\u0000\u01a5\u01a6\u0005(\u0000\u0000\u01a6\u01a7\u0005"+
		"*\u0000\u0000\u01a7\u01b1\u0001\u0000\u0000\u0000\u01a8\u01aa\u0003i4"+
		"\u0000\u01a9\u01a8\u0001\u0000\u0000\u0000\u01aa\u01ad\u0001\u0000\u0000"+
		"\u0000\u01ab\u01ac\u0001\u0000\u0000\u0000\u01ab\u01a9\u0001\u0000\u0000"+
		"\u0000\u01ac\u01ae\u0001\u0000\u0000\u0000\u01ad\u01ab\u0001\u0000\u0000"+
		"\u0000\u01ae\u01b0\u0003m6\u0000\u01af\u01ab\u0001\u0000\u0000\u0000\u01b0"+
		"\u01b3\u0001\u0000\u0000\u0000\u01b1\u01af\u0001\u0000\u0000\u0000\u01b1"+
		"\u01b2\u0001\u0000\u0000\u0000\u01b2\u01b7\u0001\u0000\u0000\u0000\u01b3"+
		"\u01b1\u0001\u0000\u0000\u0000\u01b4\u01b6\u0003i4\u0000\u01b5\u01b4\u0001"+
		"\u0000\u0000\u0000\u01b6\u01b9\u0001\u0000\u0000\u0000\u01b7\u01b8\u0001"+
		"\u0000\u0000\u0000\u01b7\u01b5\u0001\u0000\u0000\u0000\u01b8\u01ba\u0001"+
		"\u0000\u0000\u0000\u01b9\u01b7\u0001\u0000\u0000\u0000\u01ba\u01bb\u0005"+
		"\u0000\u0000\u0001\u01bb\u01bc\u00068\u0005\u0000\u01bcr\u0001\u0000\u0000"+
		"\u0000\u01bd\u01be\t\u0000\u0000\u0000\u01be\u01bf\u00069\u0006\u0000"+
		"\u01bft\u0001\u0000\u0000\u0000\u001c\u0000\u00dc\u00e3\u00e5\u00ed\u00ef"+
		"\u00f7\u00f9\u00fe\u0109\u010b\u0115\u0117\u0123\u0125\u0147\u0161\u0165"+
		"\u016e\u0176\u0183\u018a\u0190\u0196\u019c\u01ab\u01b1\u01b7\u0007\u0001"+
		"\u001c\u0000\u0001\u001d\u0001\u0001\u001e\u0002\u0006\u0000\u0000\u0001"+
		"7\u0003\u00018\u0004\u00019\u0005";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}